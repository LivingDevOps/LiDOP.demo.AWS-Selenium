---

# You can set needed variables over the environment variable LIDOP_ENV
# For this example we need custom_user and custom_password
# export LIDOP_EXTEND="lidop_extend.yml"
# export LIDOP_ENV="custom_user=myUserName custom_password=mySecretPassword"

- name: AWS Demo Extension
  block:
  - name: Create Jenkins Crumb
    uri:
      url: 'http://{{ ipaddress }}:8080/jenkins/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      timeout: 120
      force_basic_auth: yes
      return_content: yes
    register: crumb


  - name: "wait for Environment to come up"
    uri:
      url: "http://{{ ipaddress }}/jenkins/job/Environment/job/Create_Service/"
      status_code: 200
      user: "{{ root_user }}"
      password: "{{ root_password }}"
    register: result
    until: result.status == 200
    retries: 100
    delay: 5

  - name: Create sonarqube Builds
    uri:
      url: 'http://{{ ipaddress }}/jenkins/job/Environment/job/Create_Service/buildWithParameters?service=sonarqube'
      method: POST
      status_code: 201
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"

  - name: Create selenium Builds
    uri:
      url: 'http://{{ ipaddress }}/jenkins/job/Environment/job/Create_Service/buildWithParameters?service=selenium'
      method: POST
      status_code: 201
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"


  - name: Create Demo Project
    uri:
      url: 'http://{{ ipaddress }}/jenkins/job/LiDOP/job/Load%20Plugin/buildWithParameters?token=CreateBuilds&ProjectName=Demo&CopyRepository=true&PluginUrl=https://github.com/LivingDevOps/LiDOP.demo.AWS-Selenium.git&Branch=*/master'
      status_code: 201
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"

  - name: Create AWS_Access_Key Credential in Jenkins
    uri:
      method: POST
      status_code: 302
      url: 'http://{{ ipaddress }}:8080/jenkins/credentials/store/system/domain/_/createCredentials'
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
      body: |
        json={
          "": "0",
          "credentials": {
            "scope": "GLOBAL",
            "id": "AWS_Access_Key",
            "secret": "{{ aws_access_key|urlencode() }}",
            "description": "AWS_Access_Key",
            "$class": "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"
          }
        }

  - name: Create AWS_Secret_Key Credential in Jenkins
    uri:
      method: POST
      status_code: 302
      url: 'http://{{ ipaddress }}:8080/jenkins/credentials/store/system/domain/_/createCredentials'
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
      body: |
        json={
          "": "0",
          "credentials": {
            "scope": "GLOBAL",
            "id": "AWS_Secret_Key",
            "secret": "{{ aws_secret_key|urlencode() }}",
            "description": "AWS_Secret_Key",
            "$class": "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"
          }
        }

  - name: Create AWS_SSHCertificate Credential in Jenkins
    uri:
      method: POST
      status_code: 302
      url: 'http://{{ ipaddress }}:8080/jenkins/credentials/store/system/domain/_/createCredentials'
      user: "{{ root_user }}"
      password: "{{ root_password }}"
      force_basic_auth: yes
      headers:
        Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
      body: |
        json={
        "": "0",
        "credentials": {
          "scope": "GLOBAL",
          "id": "Pascal.Lauener",
          "username": "ubuntu",
          "password": "",
          "privateKeySource": {
            "stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$DirectEntryPrivateKeySource",
            "privateKey": "{{ aws_ssh_key | regex_replace('\n','\\n') | replace('+','%2B')  }}"
          },
          "description": "Pascal.Lauener",
          "stapler-class": "com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey"
          }
        }

  tags: extend